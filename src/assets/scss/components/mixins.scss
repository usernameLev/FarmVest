@use 'sass:math';

[class*='__container'] {
  max-width: rem(1420);
  margin: 0 auto;
}

@if ($responsiveType == 1) {
  [class*='__container-big'] {
    @if ($maxWidthContainer > 0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
      margin: 0 auto;
    }
    @if ($containerPadding > 0) {
      padding: 0 rem(math.div($containerPadding, 2));
    }
  }
} @else {
  [class*='__container'] {
    margin: 0 auto;
    @if ($maxWidthContainer > 0) {
      max-width: rem($maxWidthContainer);
      box-sizing: content-box;
    } @else {
      @if ($containerPadding > 0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }

    @media (max-width: $pc) {
      max-width: rem(970);
    }
    @media (max-width: $tablet) {
      max-width: rem(750);
    }
    @media (max-width: $mobile) {
      max-width: none;
      @if ($containerPadding > 0 and $maxWidthContainer > 0) {
        padding: 0 rem(math.div($containerPadding, 2));
      }
    }
  }
}

// Адаптивный размер
// padding: calc(10px + (30 - 10) * (100vw - 320px) / (1620 - 320));
@mixin adaptiveValue($property, $maxSize, $minSize, $type) {
  $addSize: $maxSize - $minSize;

  @if $type == 1 {
    // Только, если меньше контейнера
    #{$property}: $maxSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} *
          ((100vw - 320px) / #{$maxWidthContainer - 320})
      );
    }
  } @else if $type == 2 {
    // Только, если больше контейнера
    #{$property}: $maxSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
      #{$property}: calc(
        #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
      );
    }
  } @else {
    // Всегда
    #{$property}: calc(
      #{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})
    );
  }
}
